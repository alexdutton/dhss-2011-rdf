#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\rightmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Introduction to RDF, and practical modelling and conversion
\end_layout

\begin_layout Author
John Pybus and Alexander Dutton
\end_layout

\begin_layout Abstract
We explore practical considerations in representing information as RDF.
 Topics covered include linked and linkable data, choosing and creating
 vocabularies, controlled vocabularies, serialization options, and tools
 for conversion.
 We provide pointers to existing modelling communities, and ways to publish
 the RDF you create.
\end_layout

\begin_layout Section
Concepts
\end_layout

\begin_layout Subsection
RDF
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename media/rdf-example.png
	lyxscale 40
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
An example RDF graph.
 The green elipses represent URIs which in turn represent 'things'.
 The orange rectangles are literals (in this case, textual strings).
 The arrows are predicates and are identified by URIs.
 From 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/rdf-syntax/"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
RDF is a data model; a way for organising information.
 It is based around the concept of making 
\series bold
statements
\series default
, each containing a 
\series bold
subject
\series default
, a 
\series bold
predicate
\series default
, and an 
\series bold
object
\series default
.
 A statement may also be referred to as a 
\series bold
triple
\series default
, as it contains three elements.
\end_layout

\begin_layout Standard
There are three types of node in RDF; 
\series bold
URIs
\series default
, 
\series bold
blank nodes
\series default
, and 
\series bold
literals
\series default
.
\end_layout

\begin_layout Description
URI A named resource (or 'thing').
 The URI can be used to uniquely identify the resource being described.
 URIs may appear at any position within a triple.
\end_layout

\begin_layout Description
Blank
\begin_inset space ~
\end_inset

node An anonymous resource ('thing').
 Can be thought of as 
\begin_inset Quotes eld
\end_inset

there exists something thatâ€¦
\begin_inset Quotes erd
\end_inset

.
 Blank nodes may be either subjects or objects (i.e.
 not predicates).
\end_layout

\begin_layout Description
Literal A value, such as a string, a number or a boolean truth value.
 Literals may have datatypes or language codes attached to them.
 Literals may only appear as objects of a statement.
\end_layout

\begin_layout Standard
As an example, 
\begin_inset Quotes eld
\end_inset

Alice knows someone called 'Bob'
\begin_inset Quotes erd
\end_inset

 would be expressed as the following two pseudo-triples:
\end_layout

\begin_layout Itemize
Alice (subject, URI), knows (predicate, URI), 
\shape italic
X
\shape default
 (object, blank node)
\end_layout

\begin_layout Itemize

\shape italic
X
\shape default
 (subject, blank node), is called (predicate, URI), 
\begin_inset Quotes eld
\end_inset

Bob
\begin_inset Quotes erd
\end_inset

 (object, literal)
\end_layout

\begin_layout Standard
Another way to express this in natural language is 
\begin_inset Quotes eld
\end_inset

There is something such that Alice knows that thing, and that thing has
 the name 'Bob'
\begin_inset Quotes erd
\end_inset

.
 Turning this into real RDF, we might have the following, using the Turtle-based
 notation described in section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Turtle"

\end_inset

:
\end_layout

\begin_layout Itemize

\family typewriter
<http://example.org/person/alice> <http://xmlns.com/foaf/0.1/knows> _:x
\end_layout

\begin_layout Itemize

\family typewriter
_:x, <http://xmlns.com/foaf/0.1/name> 
\begin_inset Quotes eld
\end_inset

Bob
\begin_inset Quotes erd
\end_inset

@en
\end_layout

\begin_layout Subsection
Linked and linkable data
\end_layout

\begin_layout Standard
RDF, by itself, does not provide standardised or interoperable way of expressing
 common concepts, be they subjects (e.g.
 
\begin_inset Quotes eld
\end_inset

London
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

love
\begin_inset Quotes erd
\end_inset

) or relationships (e.g.
 
\begin_inset Quotes eld
\end_inset

contained within
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

believes in
\begin_inset Quotes erd
\end_inset

).
 For this we need a common understanding of terms, provided by vocabularies
 and taxonomies.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
For more information about the differences between ontologies, vocabularies,
 thesauri and taxonomies, see 
\begin_inset CommandInset href
LatexCommand href
target "http://infogrid.org/wiki/Reference/PidcockArticle"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Your data will be more useful if you choose to model it in ways understood
 by others, just as one might choose TEI for text encoding over creating
 one's own dialect of XML.
\end_layout

\begin_layout Description
Derefenceable
\begin_inset space ~
\end_inset

URIs are URIs that can be dereferenced (retrieved) from the public web,
 preferably returning some form of machine-readable data (e.g.
 RDF).
\end_layout

\begin_layout Description
Linked
\begin_inset space ~
\end_inset

data is data that refers to concepts denoted by URIs defined by others.
\begin_inset Foot
status open

\begin_layout Plain Layout
See also Tim Berners-Lee's piece on Linked Data at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/DesignIssues/LinkedData.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Linkable
\begin_inset space ~
\end_inset

data is data that uses dereferenceable URIs to identify concepts or provide
 metadata.
\end_layout

\begin_layout Standard
Linked data need not be RDF, and RDF need not be linked data.
\end_layout

\begin_layout Section
Examples of RDF datasets and projects
\end_layout

\begin_layout Subsection
Non-humanities
\end_layout

\begin_layout Standard
The BBC expose a number of their sites as RDF:
\end_layout

\begin_layout Itemize
BBC Wildlife Finder, e.g.
 
\begin_inset CommandInset href
LatexCommand href
target "http://www.bbc.co.uk/nature/life/Broadley%27s_Flat_Lizard.rdf"

\end_inset


\end_layout

\begin_layout Itemize
BBC iPlayer, e.g.
 
\begin_inset CommandInset href
LatexCommand href
target "http://www.bbc.co.uk/programmes/b006qy1y.rdf"

\end_inset


\end_layout

\begin_layout Itemize
BBC Music, e.g.
 
\begin_inset CommandInset href
LatexCommand href
target "http://www.bbc.co.uk/music/artists/ba853904-ae25-4ebb-89d6-c44cfbd71bd2.rdf"

\end_inset


\end_layout

\begin_layout Standard
A number of universities are starting to make their data available as RDF:
\end_layout

\begin_layout Itemize
University of Southampton, 
\begin_inset CommandInset href
LatexCommand href
target "http://data.southampton.ac.uk/"

\end_inset


\end_layout

\begin_layout Itemize
Open University, 
\begin_inset CommandInset href
LatexCommand href
target "http://data.open.ac.uk/"

\end_inset


\end_layout

\begin_layout Itemize
Leeds University, 
\begin_inset CommandInset href
LatexCommand href
target "http://data.leeds.ac.uk/"

\end_inset


\end_layout

\begin_layout Itemize
Univesity of Oxford, 
\begin_inset CommandInset href
LatexCommand href
target "http://data.ox.ac.uk/"

\end_inset


\end_layout

\begin_layout Standard
Governments, too, are getting in on the act:
\end_layout

\begin_layout Itemize
United Kingdom, 
\begin_inset CommandInset href
LatexCommand href
target "http://data.gov.uk/"

\end_inset


\end_layout

\begin_layout Itemize
United States of America, 
\begin_inset CommandInset href
LatexCommand href
target "http://www.data.gov/"

\end_inset


\end_layout

\begin_layout Itemize
Others listed at 
\begin_inset CommandInset href
LatexCommand href
target "http://opengovernmentdata.org/data/catalogues/"

\end_inset


\end_layout

\begin_layout Standard
There are also a number of large community-driven RDF datasets:
\end_layout

\begin_layout Itemize
DBpedia (
\begin_inset CommandInset href
LatexCommand href
target "http://dbpedia.org/"

\end_inset

); structured data extracted from Wikipedia.
 Useful for URIs to link to.
\end_layout

\begin_layout Itemize
GeoNames (
\begin_inset CommandInset href
LatexCommand href
target "http://sws.geonames.org/"

\end_inset

); place data
\end_layout

\begin_layout Itemize
Others listed at CKAN (
\begin_inset CommandInset href
LatexCommand href
target "http://ckan.org/"

\end_inset

)
\end_layout

\begin_layout Subsection
Humanities
\end_layout

\begin_layout Standard
CLAROS
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.clarosnet.org/"

\end_inset


\end_layout

\end_inset

 is a collaborative project to bring together classical art data from around
 the world.
 It uses the Erlangen implementation of the CIDOC CRM as a standardised
 data model, and the data are available at 
\begin_inset CommandInset href
LatexCommand href
target "http://data.clarosnet.org/"

\end_inset

.
\end_layout

\begin_layout Standard
Google Ancient Places (
\begin_inset CommandInset href
LatexCommand href
target "http://googleancientplaces.wordpress.com/"

\end_inset

) is a project to extract place information from Google Books and publish
 it as RDF.
\end_layout

\begin_layout Standard
The STELLAR project (
\begin_inset CommandInset href
LatexCommand href
target "http://hypermedia.research.glam.ac.uk/resources/STELLAR-applications/"

\end_inset

) 
\begin_inset Quotes eld
\end_inset

provides tools for non-specialist users to map and extract archaeological
 datasets into RDF/XML conforming to the CIDOC CRM and its CRM-EH extension.
\begin_inset Quotes eld
\end_inset


\end_layout

\begin_layout Standard
PELAGIOS (
\begin_inset CommandInset href
LatexCommand href
target "http://pelagios-project.blogspot.com/"

\end_inset

) is a cross-project collaboration to improve discoverability and visualisation
 of metadata about places in the ancient world.
\end_layout

\begin_layout Section
Serializing RDF
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename media/serialization-venn.svg
	lyxscale 20
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Features of RDF serializations (
\begin_inset CommandInset href
LatexCommand href
name "from w3.org"
target "http://www.w3.org/DesignIssues/Notation3"

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:Features-of-RDF"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
RDF is a conceptual data model, which can be embodied through various standardis
ed serialization methods.
 The following are some of the more common syntaxes you might come across.
 Each serialization format has its own set of features, a Venn diagram of
 which is presented in figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Features-of-RDF"

\end_inset

.
\end_layout

\begin_layout Description
RDF/XML An XML-based serialization.
 Useful when transforming data with XSLT.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/rdf-syntax/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Turtle A triple-based syntax with abbreviations for anonymous blank nodes,
 repeated subjects and predicates, and prefixes.
 Relatively easy to read once one gets the hang of it.
 A nightmare to write a parser for.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TeamSubmission/turtle/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Notation3 A superset of Turtle, with support for expressing concepts from
 first-order logic.
 You'll probably never come across a Notation3 document that isn't also
 a Turtle document, and as such you probably don't need to worry about it.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/DesignIssues/Notation3"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
N-Triples A subset of Turtle, without prefix declarations and repeated term
 abbreviations.
 Each line contains three Turtle-formatted terms followed by a full-stop.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/2001/sw/RDFCore/ntriples/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
TriX Like N-Triples, but as an XML dialect.
 Simple format for generating using tools.
 However, it's trivial to turn generate RDF/XML in place of a TriX document,
 so you probably don't need to use it, just be aware that it exists.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://sw.nokia.com/trix/trix.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
RDF/XML
\begin_inset CommandInset label
LatexCommand label
name "sub:RDF/XML"

\end_inset


\end_layout

\begin_layout Standard
RDF/XML is an XML-based serialization which is a useful target when transforming
 data with XSLT.
 Here's an example:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<rdf:RDF
\end_layout

\begin_layout Plain Layout

    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
\end_layout

\begin_layout Plain Layout

    xmlns:foaf="http://xmlns.com/foaf/0.1/"
\end_layout

\begin_layout Plain Layout

    xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
\end_layout

\begin_layout Plain Layout

    xmlns:skos="http://www.w3.org/2004/02/skos/core#">
\end_layout

\begin_layout Plain Layout

  <foaf:Person rdf:about="http://www.w3.org/People/Berners-Lee/card#i">
\end_layout

\begin_layout Plain Layout

    <foaf:name xml:lang="en">Tim Berners-Lee</foaf:name>
\end_layout

\begin_layout Plain Layout

    <foaf:based_near>
\end_layout

\begin_layout Plain Layout

      <geo:Point>
\end_layout

\begin_layout Plain Layout

        <geo:lat rdf:datatype="http://www.w3.org/2001/XMLSchema#float"
\end_layout

\begin_layout Plain Layout

            >42.361860</geo:lat>
\end_layout

\begin_layout Plain Layout

        <geo:long rdf:datatype="http://www.w3.org/2001/XMLSchema#float"
\end_layout

\begin_layout Plain Layout

            >-71.091840</geo:long>
\end_layout

\begin_layout Plain Layout

      </geo:Point>
\end_layout

\begin_layout Plain Layout

    </foaf:based_near>
\end_layout

\begin_layout Plain Layout

    <skos:exactMatch rdf:resource="http://dbpedia.org/resource/Tim_Berners-Lee"/>
\end_layout

\begin_layout Plain Layout

  </foaf:Person>
\end_layout

\begin_layout Plain Layout

</rdf:RDF>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
RDF/XML can be thought of as a striped syntax
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/2001/10/stripes/"

\end_inset

 for a fuller explanation.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In plain English, the above snippet reads 
\begin_inset Quotes eld
\end_inset

Tim Berners Lee is a Person; his name is 'Tim Berners-Lee'; he is based
 near a point whose latitute is 42.36 and whose longitude is -71.09; and he
 is the same concept refered to by a particular concept at DBpedia.
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The outer-most 
\family typewriter
rdf:RDF
\family default
 element contains a list of descriptions of concepts.
 A description element may have an 
\family typewriter
@rdf:about
\family default
 attribute which contains the URI reference for the concept being described.
 Each description contains a series of properties (e.g.
 
\begin_inset Quotes eld
\end_inset


\family typewriter
<foaf:name>â€¦</foaf:name>
\family default

\begin_inset Quotes erd
\end_inset

).
 Each property either has an 
\family typewriter
@rdf:resource
\family default
 attribute, containing the URI reference for the object, or contains a further
 description element.
\end_layout

\begin_layout Subsection
Turtle
\begin_inset CommandInset label
LatexCommand label
name "sub:Turtle"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
\end_layout

\begin_layout Plain Layout

@prefix foaf: <http://xmlns.com/foaf/0.1/">
\end_layout

\begin_layout Plain Layout

@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#">
\end_layout

\begin_layout Plain Layout

@prefix skos: <http://www.w3.org/2004/02/skos/core#">
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<http://www.w3.org/People/Berners-Lee/card#i> a foaf:Person ;
\end_layout

\begin_layout Plain Layout

    foaf:name "Tim Berners-Lee"@en ;
\end_layout

\begin_layout Plain Layout

    foaf:based_near [ a geo:Point ;
\end_layout

\begin_layout Plain Layout

                      geo:lat 42.361860 ;
\end_layout

\begin_layout Plain Layout

                      geo:long -71.091840 ] ;
\end_layout

\begin_layout Plain Layout

    skos:exactMatch <http://dbpedia.org/resource/Tim_Berners-Lee> .
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A Turtle document starts with a set of prefix definitions, each using the
 
\family typewriter
@prefix
\family default
 keyword.
 Prefixes can be used to create 
\begin_inset Quotes eld
\end_inset

qualified names
\begin_inset Quotes erd
\end_inset

, e.g.
 
\begin_inset Quotes eld
\end_inset


\family typewriter
foaf:name
\family default

\begin_inset Quotes erd
\end_inset

.
 This is equivalent to the second part being appended to the namespace URI
 (i.e.
 
\begin_inset Quotes eld
\end_inset

<http://xmlns.com/foaf/0.1/name>
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
A URI reference is enclosed in angle brackets.
 Square brackets denote an abbreviated syntax for blank (anonymous) nodes.
\end_layout

\begin_layout Standard
For the purposes of writing down RDF terms, URIs are often enclosed in angle
 brackets (
\family typewriter
<
\family default
, 
\family typewriter
>
\family default
), blank nodes are refered to using a leading underscore and colon (e.g.
 
\family typewriter
_:bnode
\family default
), and literals are enclosed in double quotation marks (e.g.
 
\family typewriter

\begin_inset Quotes eld
\end_inset

hello
\begin_inset Quotes erd
\end_inset


\family default
).
 Literal datatypes are identified by URIs and separated by ^^ (e.g.
 
\family typewriter

\begin_inset Quotes eld
\end_inset

2011-02-28
\begin_inset Quotes erd
\end_inset

^^date
\family default
).
 Language tags are separated by an ampersand (e.g.
 
\family typewriter

\begin_inset Quotes eld
\end_inset

A walk in the park
\begin_inset Quotes erd
\end_inset

@en
\family default
).
\end_layout

\begin_layout Subsection
Validating RDF
\end_layout

\begin_layout Standard
There are a couple of services you can use to check that the RDF that you
 generate is valid:
\end_layout

\begin_layout Itemize
The W3C's RDF Validator at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/RDF/Validator/"

\end_inset

 (RDF/XML only)
\end_layout

\begin_layout Itemize
The rdf:about validator at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.rdfabout.com/demo/validator/"

\end_inset

 (RDF/XML and Notation-3/Turtle)
\end_layout

\begin_layout Section
Choosing and developing vocabularies
\end_layout

\begin_layout Standard
In the vast majority of cases, someone has already considered and modelled
 concepts in your domain.
 In other cases you may be able to extend someone else's model to cover
 your needs.
 You should only create your own vocabulary as a last resort!
\end_layout

\begin_layout Standard
Each vocabulary lies somewhere on a scale between simplicity and ontological
 purity.
 For example, FOAF
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://xmlns.com/foaf/spec/"

\end_inset


\end_layout

\end_inset

 (Friend of a Friend) defines 
\family typewriter
foaf:Document
\family default
:
\end_layout

\begin_layout Quotation
The Document class represents those things which are, broadly conceived,
 'documents'.
 
\end_layout

\begin_layout Quotation
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename media/frbr.svg
	lyxscale 20
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
FRBR object model (
\begin_inset CommandInset href
LatexCommand href
name "from Wikipedia"
target "http://en.wikipedia.org/wiki/File:FRBR-Group-1-entities-and-basic-relations.svg"

\end_inset

, CC-BY-SA)
\begin_inset CommandInset label
LatexCommand label
name "fig:FRBR-object-model"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is a simplistic approach that satisfies cases where any further distinction
 is considered unnecessary.
 At the other end of the scale is FRBR
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://vocab.org/frbr/core.html"

\end_inset


\end_layout

\end_inset

 (Functional Requirements for Bibligraphic Records) which distinguishes
 between a work and its realizations and embodiments (Figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:FRBR-object-model"

\end_inset

).
 
\end_layout

\begin_layout Standard
You should use whichever makes most sense within your domain.
 If publishing your RDF for wider dissemination you may also wish to model
 your data using overlapping ontologies to increase its utility to a wider
 range of consumers.
\end_layout

\begin_layout Subsection
Useful ontologies and vocabularies
\end_layout

\begin_layout Description
RDF
\begin_inset space ~
\end_inset

Schema
\begin_inset space ~
\end_inset

(RDFS) Provides basic elements for the description of vocabularies and terms
 (e.g.
 property ranges and domains, and sub-class and sub-property relationships).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/rdf-schema/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Web
\begin_inset space ~
\end_inset

Ontology
\begin_inset space ~
\end_inset

Language
\begin_inset space ~
\end_inset

(OWL) 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/owl-ref/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
FOAF General-purpose vocabulary for describing people and groups.
 Widely used.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://xmlns.com/foaf/spec/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Functional
\begin_inset space ~
\end_inset

Requirements
\begin_inset space ~
\end_inset

For
\begin_inset space ~
\end_inset

Bibliographic
\begin_inset space ~
\end_inset

Records
\begin_inset space ~
\end_inset

(FRBR) Terms for the products of intellectual or artistic endeavor.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://vocab.org/frbr/core.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
vCard Contact details (e-mail, phone, addresses).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/Submission/vcard-rdf/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Organization
\begin_inset space ~
\end_inset

ontology Event-based ontology for organisational structure, change events
 and memberships.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.epimorphics.com/public/vocabulary/org.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
DCMI
\begin_inset space ~
\end_inset

Metadata
\begin_inset space ~
\end_inset

Terms
\begin_inset space ~
\end_inset

(DCTerms) Successor to the DC Elements vocabulary.
 Terms for describing resources and documents (e.g.
 title, publication dates, creators, part/whole relationships).
 Widely used and understood.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://dublincore.org/documents/dcmi-terms/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
CIDOC
\begin_inset space ~
\end_inset

CRM Definitions and a formal structure for describing the implicit and explicit
 concepts and relationships used in cultural heritage documentation.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.cidoc-crm.org/"

\end_inset

; 
\begin_inset CommandInset href
LatexCommand href
target "http://erlangen-crm.org/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
GEO A simple vocabulary for describing points and geographic co-ordinates.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/2003/01/geo/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
OpenVocab A community-defined vocabulary for terms and concepts that don't
 fit into other vocabularies.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://open.vocab.org/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Data
\begin_inset space ~
\end_inset

Cube Used as a framework for modelling statistical data.
 Extend with concepts relevant to your domain.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://publishing-statistical-data.googlecode.com/svn/trunk/specs/src/main/html/cube.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Simple
\begin_inset space ~
\end_inset

Knowledge
\begin_inset space ~
\end_inset

Organization
\begin_inset space ~
\end_inset

System
\begin_inset space ~
\end_inset

(SKOS) A common data model for sharing and linking knowledge organization
 systems.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/skos-reference/skos.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Semantically-Interlinked
\begin_inset space ~
\end_inset

Online
\begin_inset space ~
\end_inset

Communities
\begin_inset space ~
\end_inset

(SIOC,
\begin_inset space ~
\end_inset

pronounced
\begin_inset space ~
\end_inset

'shock') Used for describing 'Web 2.0'-style social media communities (e.g.
 fora, microblogging).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/skos-reference/skos.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Vocabulary
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset

Interlinked
\begin_inset space ~
\end_inset

Datasets
\begin_inset space ~
\end_inset

(VoID) Vocabulary for providing metadata about RDF-based datasets.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/skos-reference/skos.html"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Finding ontologies and vocabularies
\begin_inset CommandInset label
LatexCommand label
name "sub:Finding-ontologies-and"

\end_inset


\end_layout

\begin_layout Standard
There are a number of community-maintained resources you can use to discover
 vocabularies:
\end_layout

\begin_layout Itemize
Schemapedia (
\begin_inset CommandInset href
LatexCommand href
target "http://schemapedia.com/"

\end_inset

)
\end_layout

\begin_layout Itemize
Schemaweb (
\begin_inset CommandInset href
LatexCommand href
target "http://www.schemaweb.info/"

\end_inset

); though somewhat out of date
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "vocab.org"
target "http://vocab.org/"

\end_inset

; repository for vocabularies
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "prefix.cc"
target "http://prefix.cc/"

\end_inset

; lists common namespace prefixes with links to vocabularies
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "answers.semanticweb.com"
target "http://answers.semanticweb.com/"

\end_inset

; a question-and-answer site with a useful archive and a knowledgeable community
 who will respond to requests for help
\end_layout

\begin_layout Subsection
Anatomy of an ontology
\end_layout

\begin_layout Standard
Ontologies are defined using terms from the RDF, RDFS and OWL vocabularies,
 so consult those for more information than is provided here.
 An RDF ontology will generally define up to three classes of things:
\end_layout

\begin_layout Description
Classes A 'type', which can be ascribed to individuals.
 Examples include 
\family typewriter
foaf:Person
\family default
 (the class of people), and 
\family typewriter
crm:E22_Man-Made_Object
\family default
.
 Individuals are assigned to classes using the 
\family typewriter
rdf:type
\family default
 predicate.
 Classes are themselves instances of the 
\family typewriter
rdfs:Class
\family default
 class.
\end_layout

\begin_layout Description
Properties Terms used as predicates in RDF statements.
 Properties are defined as instances of the rdf:Property class.
 They can be further declared to be object properties (where the object
 is a resource (i.e.
 URI or blank node)), or annotation properties (where the object is a literal).
 Object properties are members of the class owl:ObjectProperty, and Annotation
 properties are members of the class owl:AnnotationProperty.
 Examples of properties include
\family typewriter
 crm:P52_has_current_owner
\family default
 (an object property), and 
\family typewriter
foaf:name
\family default
 (an annotation property).
\end_layout

\begin_layout Description
Named
\begin_inset space ~
\end_inset

individuals Sometimes it's useful to define individuals as part of a controlled
 vocabulary.
 These will be instances of some class, which may or may not be defined
 within the ontology.
 Examples include â€¦
\end_layout

\begin_layout Standard
An ontology generally has a URI to which metadata is ascribed.
 Metadata might include a name and description, and details of authors and
 publication dates.
\end_layout

\begin_layout Standard
Here's an example ontology in Turtle:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
\end_layout

\begin_layout Plain Layout

@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
\end_layout

\begin_layout Plain Layout

@prefix owl:  <http://www.w3.org/2002/07/owl#> .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@prefix hat: <http://example.org/hat-vocab/>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hat:self a owl:Ontology ;
\end_layout

\begin_layout Plain Layout

    rdfs:label "An example ontology" ;
\end_layout

\begin_layout Plain Layout

    rdfs:comment "A demonstration of a simple ontology for hats." .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hat:Hat a rdfs:Class ; # a class
\end_layout

\begin_layout Plain Layout

    rdfs:label "hat" ;
\end_layout

\begin_layout Plain Layout

    rdfs:comment "The class of things that can be worn on heads." ;
\end_layout

\begin_layout Plain Layout

    rdfs:isDefinedBy hat:self ;
\end_layout

\begin_layout Plain Layout

    rdfs:subClassOf owl:Thing .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hat:Fedora a rdfs:Class ; # another class, subclassing the first
\end_layout

\begin_layout Plain Layout

    rdfs:label "fedora" ;
\end_layout

\begin_layout Plain Layout

    rdfs:isDefinedBy hat:self ;
\end_layout

\begin_layout Plain Layout

    rdfs:subClassOf hat:Hat .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hat:wornBy a rdf:Property, owl:ObjectProperty ; # a property
\end_layout

\begin_layout Plain Layout

    rdfs:label "worn by" ;
\end_layout

\begin_layout Plain Layout

    rdfs:comment "Property linking a hat to someone who has worn it" ;
\end_layout

\begin_layout Plain Layout

    rdfs:domain hat:Hat ;
\end_layout

\begin_layout Plain Layout

    rdfs:range foaf:Person ;
\end_layout

\begin_layout Plain Layout

    rdfs:isDefinedBy hat:self .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

hat:NapoleonsHat a hat:Hat ; # a named individual
\end_layout

\begin_layout Plain Layout

    rdfs:label "Napoleon's hat" ;
\end_layout

\begin_layout Plain Layout

    rdfs:comment "The very hat worn by Napolean" ;
\end_layout

\begin_layout Plain Layout

    hat:wornBy <http://dbpedia.org/resource/Napoleon> ;
\end_layout

\begin_layout Plain Layout

    rdfs:isDefinedBy hat:self .
\end_layout

\end_inset


\end_layout

\begin_layout Section
Advice on creating ontologies and vocabularies
\end_layout

\begin_layout Subsection
Before you consider creating something newâ€¦
\end_layout

\begin_layout Standard
If you think that your use-case has a home in someone else's ontology then
 talk to them! Lots of ontologies have mailling lists or issue trackers.
 You may also find that what you need has already been considered, and can
 be expressed in some other way.
 You should also make sure to ask around; your life will be a lot easier
 if you find someone has been there before you.
\end_layout

\begin_layout Subsection
Extending vocabularies
\end_layout

\begin_layout Standard
You can extend a vocabulary by 'hooking in' terms using 
\family typewriter
rdfs:subClassOf
\family default
 and 
\family typewriter
rdfs:subPropertyOf
\family default
.
 This is particularly useful when you need to create a specialisation of
 a class defined by someone else.
\end_layout

\begin_layout Subsection
Creating vocabularies
\end_layout

\begin_layout Standard
When creating a vocabulary it is usually a good idea to consult other people
 within the field.
 This will generally turn up use-cases you hadn't previously thought of,
 making your vocabulary more widely applicable.
\end_layout

\begin_layout Subsubsection
Closed or public?
\end_layout

\begin_layout Standard
There are two main reasons you're using RDF:
\end_layout

\begin_layout Itemize
It's a means to an end.
 You want to use RDF-based tools or need the schemaless or extensible model
 that comes through using RDF.
\end_layout

\begin_layout Itemize
You buy in to the linked data philosophy.
 You want to publish your data and encourage its reuse.
\end_layout

\begin_layout Subsubsection
Closed 
\end_layout

\begin_layout Standard
In the first case, it doesn't really matter whether you use home-grown vocabular
ies or not.
 However, you should be aware of what's happening in the wider community,
 and you may wish to migrate to other vocabularies as they start to cover
 your domain (particularly if at some point you decide to publish your data).
\end_layout

\begin_layout Subsubsection
Public
\end_layout

\begin_layout Quotation
Also see 
\begin_inset Quotes eld
\end_inset

Best Practice Recipes for Publishing RDF Vocabularies
\begin_inset Quotes erd
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.w3.org/TR/swbp-vocab-pub/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the second case you should aim to be as interoperable as possible.
 In an ideal world, public vocabularies should be treated like open-source
 software.
 You may wish to build a community â€” or at least, a group of interested
 individuals â€” to maintain it in the longer term (maintanence would include
 dealing with requests for enhancement as well as fixing errors).
 You should also consider publicising your vocabulary on mailling lists
 and aggregation sites (such as those listed in section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Finding-ontologies-and"

\end_inset

); without awareness other people are liable to create their own, leading
 to a proliferation of competing vocabularies.
\end_layout

\begin_layout Standard
To fit in with the linked data ethos, your terms should be dereferenceable.
 That is, by visiting the resource identified by a URI one finds documentation,
 be it human- or machine-readable (or both
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
It's possible to use content negotiation (
\begin_inset CommandInset href
LatexCommand href
target "http://en.wikipedia.org/wiki/Content_negotiation"

\end_inset

) to differentiate between clients wanting machine-readable data (e.g.
 RDF/XML), and those wanting something to display to humans (e.g.
 HTML).
 
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
If your project has fixed-term funding and long-term hosting might be a
 problem, you should consider creating your vocabulary's URIs using a permanent
 URL service.
 Such a service will allow you to configure redirects from stable URLs.
 This will enable you to change your hosting arrangements without affecting
 what is effectively your public interface.
\end_layout

\begin_layout Subsection
Tools
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename media/protege.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The ProtÃ©gÃ©-OWL editor
\begin_inset CommandInset label
LatexCommand label
name "fig:The-ProtÃ©gÃ©-OWL-editor"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
ProtÃ©gÃ©
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://protege.stanford.edu/"

\end_inset


\end_layout

\end_inset

 â€” screenshot presented in figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:The-ProtÃ©gÃ©-OWL-editor"

\end_inset

 â€” is a free, open source ontology editor and knowledge-base framework.
 It provides a graphical interface for inspecting, creating and maintaining
 ontologies, and can output as RDFS and various flavours of OWL.
\end_layout

\begin_layout Section
Conversion strategies
\end_layout

\begin_layout Standard
Oftentimes you won't be maintaining your raw data as RDF.
 This may be because your dealing with legacy data stores, or simply because
 it's easier
\begin_inset Foot
status open

\begin_layout Plain Layout
There is a lot to be said for maintaining your data in a relational database,
 spreadsheets, or XML files.
 These come with tools that people already understand.
 Conversely, there exist few non-domain-specific tools that allow for easy
 editing of RDF data.
 The true benefit of RDF lies in it being a common model for the interchange
 of data, and the querying power and expressability available through SPARQL.
\end_layout

\end_inset

.
 In these situations you will need to come up with a reproducable and sustainabl
e way to transform your existing data into RDF.
 Even if you're starting a project from scratch, you may prefer to use a
 non-RDF-based system for maintaining your data.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
You should be aware of how you might transform your data when planning the
 system.
 It's much easier to do so at this stage than have to go back and re-edit
 data later.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here we consider the various ways you might store your data, and how you
 might go about turning it into RDF.
\end_layout

\begin_layout Subsection
Starting with tabular data
\end_layout

\begin_layout Standard
Spreadsheets, CSV files and relational databases are all forms of tabular
 data.
 In these cases you have two options; turn it into XML and transform that
 using XSLT, or write a program to transform it directly.
\end_layout

\begin_layout Standard
To turn tabular data into XML, you can use a service like OxGarage
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
OxGarage is an open-source web service for conversion between various spreadshee
t, textual document, and presentation formats.
 You can find more documentation at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.oucs.ox.ac.uk/oxgarage/"

\end_inset

, including on how to interact with it or install it locally.
\end_layout

\end_inset

.
 This supports CSV (
\family typewriter
.csv
\family default
), TSV (
\family typewriter
.tsv
\family default
), Excel (
\family typewriter
.xls
\family default
), Office Open XML Spreadsheet (
\family typewriter
.xlsx
\family default
), and OpenDocument Spreadsheet (
\family typewriter
.ods
\family default
) files.
 The resultant file can be in anyone of these formats or â€” as we desire
 â€” TEI XML.
\end_layout

\begin_layout Standard
Writing a bespoke program to transform tabular data is probably overkill,
 though might be worthwhile if there are other systems or APIs
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Application Programming Interfaces; services that can be queried and which
 generally return structured data
\end_layout

\end_inset

 (e.g.
 look-up services) that need to be consulted in order to perform the transformat
ion.
 In these cases you may also wish to consider using a tool like Google Refine
 (see section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Google-Refine"

\end_inset

).
\end_layout

\begin_layout Standard
As an a further alternative, the University of Southampton use a tool called
 Grinder
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/cgutteridge/Grinder"

\end_inset


\end_layout

\end_inset

 to turn tabular data into RDF.
 It's possibly lacking a little in documentation at the moment, but it handles
 pulling files from the web and then using a specified XSLT template to
 perfomr the conversion into RDF/XML.
 An example of the files they use to publish a dataset can be found under
 the heading 
\begin_inset Quotes eld
\end_inset

Other Files Used in the Publication Process
\begin_inset Quotes erd
\end_inset

 at 
\begin_inset CommandInset href
LatexCommand href
target "http://data.southampton.ac.uk/dataset/services.html"

\end_inset

.
\end_layout

\begin_layout Standard
Southampton also edit a lot of their data using Google Spreadsheets.
 This allows non-technical users to maintain information in a familiar environme
nt, which is then processed and published at regular intervals by their
 infrastructure.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
It should be pointed out that by using Google Spreadsheets they are not
 'trusting their data to the cloud'; rather they are using it as an editing
 tool, with perfect copies downloaded and stored regularly.
 This will allow them to continue maintaining their data unaffected if ever
 Google Spreadsheets were to disappear.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Converting XML using XSLT
\end_layout

\begin_layout Standard
XML is often best converted to RDF using XSLT
\begin_inset Foot
status open

\begin_layout Plain Layout
Extensible Stylesheet Language Transformations
\end_layout

\end_inset

, an XML-based language for transforming one XML into another.
 In our case our target will be valid RDF/XML (as described in section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:RDF/XML"

\end_inset

).
\end_layout

\begin_layout Standard
Describing XSLT is out of the scope of this document, but you can find good
 introductions in the following places:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
target "http://www.jenitennison.com/xslt/"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
target "http://www.ibm.com/developerworks/xml/tutorials/x-introxslt/"

\end_inset


\end_layout

\begin_layout Subsection
Google Refine
\begin_inset CommandInset label
LatexCommand label
name "sub:Google-Refine"

\end_inset


\end_layout

\begin_layout Standard
Google Refine describes itself as 'a power tool for working with messy data,
 cleaning it up, transforming it from one format into another, extending
 it with web services, and linking it to databases like Freebase'.
 It also supports you in reconciling or co-referencing one dataset against
 another.
\end_layout

\end_body
\end_document
